{"ast":null,"code":"import React from 'react'; // eslint-disable-next-line\n\nimport Swiper from '../../core';\nfunction calcLoopedSlides(slides, swiperParams) {\n  var slidesPerViewParams = swiperParams.slidesPerView;\n  if (swiperParams.breakpoints) {\n    var breakpoint = Swiper.prototype.getBreakpoint(swiperParams.breakpoints);\n    var breakpointOnlyParams = breakpoint in swiperParams.breakpoints ? swiperParams.breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams && breakpointOnlyParams.slidesPerView) {\n      slidesPerViewParams = breakpointOnlyParams.slidesPerView;\n    }\n  }\n  var loopedSlides = Math.ceil(parseFloat(swiperParams.loopedSlides || slidesPerViewParams, 10));\n  loopedSlides += swiperParams.loopAdditionalSlides;\n  if (loopedSlides > slides.length) {\n    loopedSlides = slides.length;\n  }\n  return loopedSlides;\n}\nfunction renderLoop(swiper, slides, swiperParams) {\n  var modifiedSlides = slides.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      swiper: swiper,\n      'data-swiper-slide-index': index\n    });\n  });\n  function duplicateSlide(child, index, position) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      key: child.key + \"-duplicate-\" + index + \"-\" + position,\n      className: (child.props.className || '') + \" \" + swiperParams.slideDuplicateClass\n    });\n  }\n  if (swiperParams.loopFillGroupWithBlank) {\n    var blankSlidesNum = swiperParams.slidesPerGroup - modifiedSlides.length % swiperParams.slidesPerGroup;\n    if (blankSlidesNum !== swiperParams.slidesPerGroup) {\n      for (var i = 0; i < blankSlidesNum; i += 1) {\n        var blankSlide = /*#__PURE__*/React.createElement(\"div\", {\n          className: swiperParams.slideClass + \" \" + swiperParams.slideBlankClass\n        });\n        modifiedSlides.push(blankSlide);\n      }\n    }\n  }\n  if (swiperParams.slidesPerView === 'auto' && !swiperParams.loopedSlides) {\n    swiperParams.loopedSlides = modifiedSlides.length;\n  }\n  var loopedSlides = calcLoopedSlides(modifiedSlides, swiperParams);\n  var prependSlides = [];\n  var appendSlides = [];\n  modifiedSlides.forEach(function (child, index) {\n    if (index < loopedSlides) {\n      appendSlides.push(duplicateSlide(child, index, 'prepend'));\n    }\n    if (index < modifiedSlides.length && index >= modifiedSlides.length - loopedSlides) {\n      prependSlides.push(duplicateSlide(child, index, 'append'));\n    }\n  });\n  if (swiper) {\n    swiper.loopedSlides = loopedSlides;\n  }\n  return [].concat(prependSlides, modifiedSlides, appendSlides);\n}\nexport { calcLoopedSlides, renderLoop };","map":null,"metadata":{},"sourceType":"module"}