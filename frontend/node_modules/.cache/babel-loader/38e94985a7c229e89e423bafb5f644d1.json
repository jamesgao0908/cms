{"ast":null,"code":"import axios from \"axios\";\nconst api_userLogin = (email, password, rememberMe, navigate) => {\n  // console.log(\"called login\");\n  return new Promise((resolve, reject) => {\n    const postData = {\n      email,\n      password,\n      rememberMe\n    };\n    axios.post(\"http://localhost:8080/api/user/login\", postData).then(response => {\n      const {\n        token,\n        is_admin\n      } = response.data;\n      if (token) {\n        localStorage.setItem(\"token\", token);\n        if (is_admin === 1) {\n          navigate(\"/config\");\n        } else {\n          navigate(\"/\");\n        }\n        resolve(\"Login successful\"); // 解析成功，返回成功信息\n      } else {\n        reject(new Error(\"Login failed\")); // 登录失败，返回失败信息\n      }\n    }).catch(error => {\n      reject(new Error(error.response.data.message)); // 处理登录错误，返回错误信息\n    });\n  });\n};\n\nexport default api_userLogin;","map":{"version":3,"names":["axios","api_userLogin","email","password","rememberMe","navigate","Promise","resolve","reject","postData","post","then","response","token","is_admin","data","localStorage","setItem","Error","catch","error","message"],"sources":["/Users/james/Projects/cms/client/src/services/user/api_userLogin.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api_userLogin = (email, password, rememberMe, navigate) => {\n  // console.log(\"called login\");\n  return new Promise((resolve, reject) => {\n    const postData = {\n      email,\n      password,\n      rememberMe,\n    };\n    axios\n      .post(\"http://localhost:8080/api/user/login\", postData)\n      .then((response) => {\n        const { token, is_admin } = response.data;\n        if (token) {\n          localStorage.setItem(\"token\", token);\n          if (is_admin === 1) {\n            navigate(\"/config\");\n          } else {\n            navigate(\"/\");\n          }\n          resolve(\"Login successful\"); // 解析成功，返回成功信息\n        } else {\n          reject(new Error(\"Login failed\")); // 登录失败，返回失败信息\n        }\n      })\n      .catch((error) => {\n        reject(new Error(error.response.data.message)); // 处理登录错误，返回错误信息\n      });\n  });\n};\n\nexport default api_userLogin;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,KAAK;EAC/D;EACA,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,QAAQ,GAAG;MACfP,KAAK;MACLC,QAAQ;MACRC;IACF,CAAC;IACDJ,KAAK,CACFU,IAAI,CAAC,sCAAsC,EAAED,QAAQ,CAAC,CACtDE,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAAEC,KAAK;QAAEC;MAAS,CAAC,GAAGF,QAAQ,CAACG,IAAI;MACzC,IAAIF,KAAK,EAAE;QACTG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;QACpC,IAAIC,QAAQ,KAAK,CAAC,EAAE;UAClBT,QAAQ,CAAC,SAAS,CAAC;QACrB,CAAC,MAAM;UACLA,QAAQ,CAAC,GAAG,CAAC;QACf;QACAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM;QACLC,MAAM,CAAC,IAAIU,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;MACrC;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBZ,MAAM,CAAC,IAAIU,KAAK,CAACE,KAAK,CAACR,QAAQ,CAACG,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC;EACN,CAAC,CAAC;AACJ,CAAC;;AAED,eAAepB,aAAa"},"metadata":{},"sourceType":"module"}