{"ast":null,"code":"var _jsxFileName = \"/Users/james/Projects/cms/client/src/Pages/CustomBake.jsx\";\nimport { Box, Typography } from \"@mui/material\";\nimport React, { useState, useRef } from \"react\";\nimport theme from \"../utils/theme\";\nimport PermMediaIcon from '@mui/icons-material/PermMedia';\nconst CustomBake = () => {\n  const [image, setImage] = useState(null);\n  const inputRef = useRef(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleBoxClick = () => {\n    if (inputRef.current) {\n      inputRef.current.click();\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    maxWidth: 'lg',\n    m: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    sx: {\n      color: `${theme.color.primary}`,\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"Custom Bake\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      boxShadow: '6px 3px 14.3px 0 rgba(0, 0, 0, 0.23)',\n      display: 'flex',\n      flexDirection: {\n        xs: 'column',\n        sm: 'md'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      border: '1px solid grey',\n      height: \"200px\",\n      width: \"200px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: \"lightgrey\",\n      borderRadius: \"40px\",\n      cursor: \"pointer\"\n    },\n    onClick: handleBoxClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, image ? /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: \"Thumbnail\",\n    height: \"100%\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PermMediaIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 35\n    }\n  }), \"Click to upload image\"))), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: handleFileChange,\n    ref: inputRef,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  })));\n};\nexport default CustomBake;","map":{"version":3,"names":["Box","Typography","React","useState","useRef","theme","PermMediaIcon","CustomBake","image","setImage","inputRef","handleFileChange","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","handleBoxClick","current","click","createElement","maxWidth","m","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","color","primary","alignItems","textAlign","gutterBottom","boxShadow","display","flexDirection","xs","sm","flex","border","height","width","justifyContent","backgroundColor","borderRadius","cursor","onClick","src","alt","Fragment","type","accept","onChange","ref","style"],"sources":["/Users/james/Projects/cms/client/src/Pages/CustomBake.jsx"],"sourcesContent":["import { Box, Typography } from \"@mui/material\";\nimport React, { useState, useRef } from \"react\";\nimport theme from \"../utils/theme\";\nimport PermMediaIcon from '@mui/icons-material/PermMedia';\n\n\nconst CustomBake = ()=>{\n\n  const [image, setImage] = useState(null);\n  const inputRef = useRef(null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        setImage(e.target.result);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleBoxClick = () => {\n    if (inputRef.current) {\n      inputRef.current.click();\n    }\n  };\n\n  return <Box maxWidth={'lg'} m=\"1rem\">\n    <Typography variant=\"h5\" sx={{ color: `${theme.color.primary}`, alignItems: 'center', textAlign: 'center'}} gutterBottom>\n      Custom Bake\n    </Typography>\n    <Box\n      sx={{\n        boxShadow: '6px 3px 14.3px 0 rgba(0, 0, 0, 0.23)',\n        display:'flex',\n        flexDirection: { xs: 'column', sm: 'md'}\n      }}\n    >\n      {/* left box */}\n      <Box flex={1}>\n        {/* <Typography variant=\"p\">Upload your own images</Typography> */}\n        <Box \n          sx={{ \n            border: '1px solid grey',\n            height: \"200px\",\n            width: \"200px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"lightgrey\",\n            borderRadius: \"40px\",\n            cursor: \"pointer\",\n          }} \n          onClick={handleBoxClick}\n        >\n        {\n        image ? (\n          <img src={image} alt=\"Thumbnail\" height='100%' width='100%'/> \n        ):(<>\n          <Typography variant=\"p\"><PermMediaIcon />Click to upload image</Typography>\n        </>)\n        }\n        </Box>\n        <Box>\n          <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} ref={inputRef} style={{ display: 'none' }} />\n        </Box>\n      </Box>\n      {/* right box */}\n      <Box flex={1}></Box>\n    </Box>\n  </Box>\n}\n\nexport default CustomBake;"],"mappings":"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"},"metadata":{},"sourceType":"module"}